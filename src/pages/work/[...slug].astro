---
import { CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";

import ContactCTA from "../../components/ContactCTA.astro";
import Hero from "../../components/Hero.astro";
import Icon from "../../components/Icon.astro";
import Pill from "../../components/Pill.astro";

interface Props {
  entry: CollectionEntry<"work">;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  const work = await getCollection("work");
  return work.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
  <div class="stack gap-20">
    <div class="stack gap-15">
      <header>
        <div class="wrapper stack gap-2">
          <a class="back-link" href="/projects/"
            ><Icon icon="arrow-left" /> Projects</a
          >
          <Hero title={entry.data.title} align="start">
            <div class="details">
              <div class="tags">
                {entry.data.tags.map((t) => <Pill>{t}</Pill>)}
              </div>

              <p class="description">{entry.data.description}</p>
            </div>
          </Hero>
        </div>
      </header>

      <main class="wrapper">
        <div class="stack gap-10 content">
          {
            entry.data.img && (
              <img src={entry.data.img} alt={entry.data.img_alt || ""} />
            )
          }
          <div class="content">
            <Content />
          </div>
        </div>
      </main>
    </div>
    <ContactCTA />
  </div>
</BaseLayout>

<style>
  header {
    padding-bottom: 2.5rem;
    border-bottom: 1px solid var(--gray-800);
    width: 100%;
  }

  /* Add responsive title handling */
  :global(.hero-title) {
    font-size: clamp(1.5rem, 5vw, 3rem);
    line-height: 1.2;
    word-break: break-word;
  }

  .back-link {
    display: none;
  }

  .details {
    display: flex;
    flex-direction: column;
    padding: 0.5rem;
    gap: 1.5rem;
    justify-content: space-between;
    align-items: center;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    justify-content: center;
    max-width: 100%;
    padding: 0 1rem;
  }

  .description {
    font-size: var(--text-lg);
    max-width: 54ch;
    padding: 0 1rem;
    word-wrap: break-word;
    margin: 0 auto;
  }

  .content {
    max-width: min(65ch, 100%);
    margin-inline: auto;
    padding: 0 1rem;
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
  }

  /* Force content to stay within bounds */
  .content :global(*) {
    max-width: 100%;
    overflow-wrap: break-word;
    word-wrap: break-word;
  }

  .content > :global(* + *) {
    margin-top: 1rem;
  }

  .content :global(h1),
  .content :global(h2),
  .content :global(h3),
  .content :global(h4),
  .content :global(h5) {
    margin: 1.5rem 0;
    word-wrap: break-word;
  }

  .content :global(img) {
    border-radius: 1.5rem;
    box-shadow: var(--shadow-sm);
    background: var(--gradient-subtle);
    border: 1px solid var(--gray-800);
    max-width: 100%;
    height: auto;
    display: block;
    margin: 0 auto;
  }

  .content :global(blockquote) {
    font-size: var(--text-lg);
    font-family: var(--font-brand);
    font-weight: 600;
    line-height: 1.1;
    padding-inline-start: 1.5rem;
    border-inline-start: 0.25rem solid var(--accent-dark);
    color: var(--gray-0);
    word-wrap: break-word;
  }

  .content :global(pre) {
    max-width: 100%;
    overflow-x: auto;
    white-space: pre-wrap;
    word-wrap: break-word;
    padding: 1rem;
  }

  .back-link,
  .content :global(a) {
    text-decoration: 1px solid underline transparent;
    text-underline-offset: 0.25em;
    transition: text-decoration-color var(--theme-transition);
  }

  .back-link:hover,
  .back-link:focus,
  .content :global(a:hover),
  .content :global(a:focus) {
    text-decoration-color: currentColor;
  }

  .wrapper {
    width: 100%;
    max-width: 150ch; /* Increased from 83ch for wider content */
    margin: 0 auto;
    padding: 0 2rem; /* Consistent padding */
  }

  @media (min-width: 50em) {
    .back-link {
      display: block;
      align-self: flex-start;
    }

    .details {
      flex-direction: row;
      gap: 2.5rem;
    }

    .tags {
      justify-content: flex-start;
      padding: 0;
    }

    .description {
      padding: 0;
      margin: 0;
    }

    .content {
      padding: 0;
    }

    .content :global(blockquote) {
      font-size: var(--text-2xl);
    }

    .wrapper {
      padding: 0 2rem;
    }
  }

  /* Responsive heading styles */
  .content :global(h1) {
    font-size: clamp(1.5rem, 4vw, 2.5rem);
    line-height: 1.2;
  }

  .content :global(h2) {
    font-size: clamp(1.25rem, 3.5vw, 2rem);
    line-height: 1.2;
  }

  .content :global(h3) {
    font-size: clamp(1.1rem, 3vw, 1.75rem);
    line-height: 1.2;
  }

  .content :global(h4) {
    font-size: clamp(1rem, 2.5vw, 1.5rem);
    line-height: 1.2;
  }

  /* Common heading styles */
  .content :global(h1),
  .content :global(h2),
  .content :global(h3),
  .content :global(h4) {
    margin: 1.5rem 0;
    word-wrap: break-word;
    max-width: 100%;
    overflow-wrap: break-word;
    hyphens: auto;
    line-height: 1.2;
  }

  /* Desktop heading hierarchy */
  .content :global(h1) {
    font-size: clamp(1.8rem, 5vw, 2.5rem);
  }

  .content :global(h2) {
    font-size: clamp(1.5rem, 4vw, 2.2rem);
  }

  .content :global(h3) {
    font-size: clamp(1.2rem, 3vw, 1.9rem);
  }

  .content :global(h4) {
    font-size: clamp(1rem, 2.5vw, 1.6rem);
  }

  /* Mobile heading hierarchy */
  @media (max-width: 768px) {
    .content :global(h1) {
      font-size: clamp(1.4rem, 5vw, 1.8rem);
    }
    .content :global(h2) {
      font-size: clamp(1.2rem, 4vw, 1.6rem);
    }
    .content :global(h3) {
      font-size: clamp(1.1rem, 3vw, 1.4rem);
    }
    .content :global(h4) {
      font-size: clamp(1rem, 2.5vw, 1.2rem);
    }
  }

  @media (max-width: 768px) {
    .wrapper {
      padding: 0 1rem;
    }
  }
</style>
